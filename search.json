[
  {
    "objectID": "roadblocks.html",
    "href": "roadblocks.html",
    "title": "Scrap page: roadblocks, difficulties to remove or solutions to issues",
    "section": "",
    "text": "StatefulSet for temporary data (like a cache)\nBackup, K8s cronjob for backup, where to backup\nGitHub CI/CD to a cloud -&gt; security? (keys)\nAssembly on the cloud, Assembly between clouds (or cloud/servers) -&gt; security of set-up and exchange, who is monitoring (and how), where lies the responsibility? (GDPR, simple privacy concern, data theft, data loss, data leaks, data corruption)\nDaemonSet for monitoring and other tasks.",
    "crumbs": [
      "Home",
      "Scrap pages",
      "Scrap page: roadblocks, difficulties to remove or solutions to issues"
    ]
  },
  {
    "objectID": "pages/TechPlatformDecisionTree.html",
    "href": "pages/TechPlatformDecisionTree.html",
    "title": "Technical Platform decision tree for Data Management Platforms",
    "section": "",
    "text": "Here we will provide a decision tree on when to use which solution. It will try to take most factors into account (as in the availability of technical support, if a Cloud is already available…).",
    "crumbs": [
      "Home",
      "Technical Platform decision tree for Data Management Platforms"
    ]
  },
  {
    "objectID": "pages/Kubernetes_introduction.html",
    "href": "pages/Kubernetes_introduction.html",
    "title": "Kubernetes - introduction",
    "section": "",
    "text": "Try to explain clearly what the Kubernetes elements translate to and repeat it often to clarify this vocabulary as quickly as possible. Explain everything: so start from a simple (and stupid) solution and add to it. Do not drown: keep things structured so things are not confusing.",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Kubernetes - introduction"
    ]
  },
  {
    "objectID": "pages/Kubernetes_introduction.html#seek-and-his-components",
    "href": "pages/Kubernetes_introduction.html#seek-and-his-components",
    "title": "Kubernetes - introduction",
    "section": "2.1 Seek and his components",
    "text": "2.1 Seek and his components",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Kubernetes - introduction"
    ]
  },
  {
    "objectID": "pages/Kubernetes_introduction.html#the-default-docker-compose",
    "href": "pages/Kubernetes_introduction.html#the-default-docker-compose",
    "title": "Kubernetes - introduction",
    "section": "2.2 The default Docker Compose",
    "text": "2.2 The default Docker Compose",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Kubernetes - introduction"
    ]
  },
  {
    "objectID": "pages/Kubernetes_introduction.html#what-could-benefit-from-a-cloud-setup",
    "href": "pages/Kubernetes_introduction.html#what-could-benefit-from-a-cloud-setup",
    "title": "Kubernetes - introduction",
    "section": "2.3 What could benefit from a cloud setup",
    "text": "2.3 What could benefit from a cloud setup",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Kubernetes - introduction"
    ]
  },
  {
    "objectID": "pages/Kubernetes_introduction.html#good-free-instructory-resources",
    "href": "pages/Kubernetes_introduction.html#good-free-instructory-resources",
    "title": "Kubernetes - introduction",
    "section": "3.1 Good free instructory resources",
    "text": "3.1 Good free instructory resources\n\n3.1.1 Tutorials and sandboxes\nKubernetes Crash Course for Absolute Beginners Kubernetes online course, also containers (docker-based) Kubernetes essentials, the site also offers many other useful tutorials Online Kubernetes sandbox, Play with K8s and the corresponding workshop\n\n\n3.1.2 Simple Kubernetes setup\nOn Windows, the simplest way to run Kubernetes is probably using Docker Desktop. A simple Kubernetes setup is part of the options.\nOn Linux, there are lightweight setup using various approached. The main ones are k3s, … (TBC)",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Kubernetes - introduction"
    ]
  },
  {
    "objectID": "pages/Kubernetes_introduction.html#terminology-main-elements",
    "href": "pages/Kubernetes_introduction.html#terminology-main-elements",
    "title": "Kubernetes - introduction",
    "section": "3.2 Terminology & main elements",
    "text": "3.2 Terminology & main elements\nA first glance on Kubernetes can be very confusing. A big part of this confusion is due to a lot of “moving” parts with confusing names.\nA full list of terms can be found on the official documentation.\nThe maim terms/elements you should know are:\n\nCluster:\nNode: one worker machine in Kubernetes, like a server. Can be a physical machine or a virtual machine.\nPod: the smallest object in Kubernetes, that will run one or several containers. The containers can be run by docker or other container engines.\nService: a fixed network endpoint to a container in Kubernetes. It allows to connect to an application in a Pod, without having this connection defined into the pod. Kubernetes often has one extra layer of access (compared to Docker Compose for instance) allowing a full decoupling of all elements. That makes it easier to change the configuration later on (automatically due to the need or from an user update).\nLabel: labels are used for Kubernetes to find the different elements.\nKubectl: the command line tool to communicate with the Kubernetes control center. With it you can create the object, update them, list them…\nManifest: the JSON or YAML file that define a Kubernetes object. Objects are all elements of Kubernetes: Deployments, Services, ReplicaSet, DaemonSet, …\n\nAnd generally, the applications are deployed as:\n\nReplicatSet: ask for a set numbers of Pods. Kubernetes will try to have the set number of pods running, and will restore this which might become unhealthy. The pods can be on any node and it is not guaranteed that Kubernetes will be able to get the right number of pods (if there isn’t enough resources typically). It is possible to influence on which node the pods will run using affinities, see Section 3.12\nDeployment:\nDaemonSet:\nStatefulSet:\nJob:\nConfigMap:\nSecret:",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Kubernetes - introduction"
    ]
  },
  {
    "objectID": "pages/Kubernetes_introduction.html#everything-decoupled",
    "href": "pages/Kubernetes_introduction.html#everything-decoupled",
    "title": "Kubernetes - introduction",
    "section": "3.3 Everything decoupled",
    "text": "3.3 Everything decoupled\nHow Kubernetes makes everything through API and labels Why there is so many extra layers compared to docker compose -&gt; full decoupling.",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Kubernetes - introduction"
    ]
  },
  {
    "objectID": "pages/Kubernetes_introduction.html#the-various-objects-for-your-application",
    "href": "pages/Kubernetes_introduction.html#the-various-objects-for-your-application",
    "title": "Kubernetes - introduction",
    "section": "3.4 The various objects for your application",
    "text": "3.4 The various objects for your application\nDeployment, Job, ReplicaSet, DaemonSet, StatefulSet\nWhile the Pod is the smallest element in Kubernetes, it is directly started only for testing. If you define a pod or create it using kubectl, it will only run once and will not be restarted if something fails. As such it is like docker run, if started using kubectl, or docker compose, if started using a manifest, and offer no benefice, just the added complexity of the setup.\nA ReplicaSet ask for a set number of pods and Kubernetes will ensure that there are running. If one pod is not healthy anymore, Kubernetes will remove it and create a new one.",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Kubernetes - introduction"
    ]
  },
  {
    "objectID": "pages/Kubernetes_introduction.html#updating-an-application",
    "href": "pages/Kubernetes_introduction.html#updating-an-application",
    "title": "Kubernetes - introduction",
    "section": "3.5 Updating an application",
    "text": "3.5 Updating an application\nApplications are still running in container, so updating consists in updating the image. If deployment are used, the update is managed by kubernetes: it will follow an update strategy to run the new containers while stopping and removing the old ones.",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Kubernetes - introduction"
    ]
  },
  {
    "objectID": "pages/Kubernetes_introduction.html#where-do-you-store-the-data",
    "href": "pages/Kubernetes_introduction.html#where-do-you-store-the-data",
    "title": "Kubernetes - introduction",
    "section": "3.6 Where do you store the data",
    "text": "3.6 Where do you store the data\nVolumes, …",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Kubernetes - introduction"
    ]
  },
  {
    "objectID": "pages/Kubernetes_introduction.html#configuration-values",
    "href": "pages/Kubernetes_introduction.html#configuration-values",
    "title": "Kubernetes - introduction",
    "section": "3.7 Configuration values",
    "text": "3.7 Configuration values\nConfigMap and Secrets\nRegular Values can be stored in a ConfigMap, while values that should be hidden are store in Secrets. The main idea of Secrets is to keep your confidential values out of the regular configuration, in a secure place. Secret values are encoded in Base64 for preventing issues with special characters but it does not offer any added security (it can be decoded with any Base64 decoding tool).",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Kubernetes - introduction"
    ]
  },
  {
    "objectID": "pages/Kubernetes_introduction.html#namespace",
    "href": "pages/Kubernetes_introduction.html#namespace",
    "title": "Kubernetes - introduction",
    "section": "3.8 Namespace",
    "text": "3.8 Namespace",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Kubernetes - introduction"
    ]
  },
  {
    "objectID": "pages/Kubernetes_introduction.html#network-access",
    "href": "pages/Kubernetes_introduction.html#network-access",
    "title": "Kubernetes - introduction",
    "section": "3.9 Network access",
    "text": "3.9 Network access",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Kubernetes - introduction"
    ]
  },
  {
    "objectID": "pages/Kubernetes_introduction.html#loadbalancing",
    "href": "pages/Kubernetes_introduction.html#loadbalancing",
    "title": "Kubernetes - introduction",
    "section": "3.10 LoadBalancing",
    "text": "3.10 LoadBalancing",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Kubernetes - introduction"
    ]
  },
  {
    "objectID": "pages/Kubernetes_introduction.html#several-deployments",
    "href": "pages/Kubernetes_introduction.html#several-deployments",
    "title": "Kubernetes - introduction",
    "section": "3.11 Several Deployments",
    "text": "3.11 Several Deployments\nkustomize\nhelm",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Kubernetes - introduction"
    ]
  },
  {
    "objectID": "pages/Kubernetes_introduction.html#sec-affinities",
    "href": "pages/Kubernetes_introduction.html#sec-affinities",
    "title": "Kubernetes - introduction",
    "section": "3.12 Affinities",
    "text": "3.12 Affinities",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Kubernetes - introduction"
    ]
  },
  {
    "objectID": "pages/Volumes.html",
    "href": "pages/Volumes.html",
    "title": "Volumes",
    "section": "",
    "text": "Evidently, an important part of Data Management is the storage of data. From container to orchestrated system, data that need to be persisted is saved in volumes. Volume is a kind of abstract name for various solutions, which might be more adapted to certain cases.\nSome more advanced solutions might be easy to use, but hard to set-up and maintain. So their usage often depends on what is supported by the Cloud admin.",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Volumes"
    ]
  },
  {
    "objectID": "index_bak.html",
    "href": "index_bak.html",
    "title": "De.KCD - Data Management Platform on the Cloud",
    "section": "",
    "text": "Process and documentation on adapting a docker-based Data Management platform, Seek4Science, to Kubernetes, and using it in the cloud.\n\nGeneral Introduction\n\n\nLearning Kubernetes\n\n\nBenefits and costs\n\n\nQuick overview\n\n\nFrom Docker compose to manifest\n\nMedium data storage needs\nLarge data storage needs\n\n\n\nFrom manifest to Helm chart\n\n\nOther solutions\n\n\nScalability\n\n\nDatabases\n\n\nSecurity\n\n\nGoing to an assembly\nThis is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "TBD"
  },
  {
    "objectID": "static_md/tutorials_links.html",
    "href": "static_md/tutorials_links.html",
    "title": "Tutorials’ Links",
    "section": "",
    "text": "Editing these pages\n\nStackEdit, a Wysiwyg MD editor\n\n\n\nDocker & Docker compose\n\nDocker manual\n\n\n\nOpenStack\n\nYoutube: Introduction to OpenStack\nYoutube: Alternative Introduction to OpenStack\n\n\n\nKubernetes\n\nYoutube: Kubernetes crash course\nTutorials at IBM\n\n\n\nIdentity Management\n\nOauth on Wikipedia\nOpenID\nAAI: Elixir Authentication and Authorization Infrastructure\nAuthentik: a simplified but powerful identity server\nLDAP on Wikipedia\n\n\n\nAnsible\n\nGetting started - Official documentation\n\n\n\nTerraform\n\nTerraform vs Kubernetes\n\n\n\nData Management\n\nDM - Corporate\n\nKnowledge Graphs - SciBite\nWhat is a Semantic Knowledge Graph? - SciBite\n\n\n\nDM - Tools and Apps\n\nOpen Knowledge Foundation – For a fair, sustainable and open future\nCKAN - The open source data management system\nREDCap – Research Electronic Data Capture - Universitätsrechenzentrum Heidelberg\nTool assembly | RDMkit\nTool assembly: Galaxy | RDMkit\nTool assembly: Plant Phenomics | RDMkit\nGitHub - BiBiServ/bibigrid: BiBiGrid is a tool for an easy cluster setup inside a cloud environment.\nVault by HashiCorp\nData Stewardship Wizard\nELIXIR-CONVERGE deliverables | ELIXIR\nELIXIR-CONVERGE | ELIXIR\nAbout - TeSS (Training eSupport System)\nDSW Cloud for ELIXIR\nHome | re3data.org\nCancer Galaxy\nTool assembly: Marine Metagenomics | RDMkit\nMIAPPE\nFAIR Cookbook\nFAIR Wizard\nFAIRsharing | Home\nFAIR Solutions Products\nRucio - Scientific Data Management\nOverture - Home\nGitHub - irods/irods: Open Source Data Management Software\nZenodo - Google Search\nFAIRmat - FAIRmat\nELIXIR CONVERGE WP3: Common Data Management Toolkit | ELIXIR\nNOMAD\nZenodo\nMaterials - OpenWetWare\nDataPLAN, generate a data management plan DMP easily\nAruna | The data orchestration engine\nFAIRshare | FAIR Data Innovations Hub\n\n\n\nDM - Misc\n\nFORCE11 – The Future of Research Communications and e-Scholarship\nNFDI4Biodiversity - YouTube\nData Management and Data Literacy - YouTube\n\n\n\nTechnical tools and languages\n\nDiscover GO\n\n\nWritten with the help of StackEdit."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "De.KCD - Data Management Platform on the Cloud, step by step",
    "section": "",
    "text": "Process and documentation on adapting a docker-based Data Management platform, Seek4Science, to Kubernetes, and using it in the cloud.",
    "crumbs": [
      "Home",
      "De.KCD - Data Management Platform on the Cloud, step by step"
    ]
  },
  {
    "objectID": "index.html#useful-things-to-know",
    "href": "index.html#useful-things-to-know",
    "title": "De.KCD - Data Management Platform on the Cloud, step by step",
    "section": "Useful things to know",
    "text": "Useful things to know\nA docker image will be started (once used in a container) using an Entrypoint and/or a cmd. These can be listed by using docker inspect &lt;image id&gt;, but also individually by using docker inspect -f '{{.Config.Entrypoint}}' &lt;image id&gt; and docker inspect -f '{{.Config.Cmd}}' &lt;image id&gt;. This is useful in case something goes wrong inside a container to know how the container is supposed to start.\nChanging something that is part of the image is possible when running the container, but it will never be persistent and is generally a bad idea. One good case is when debugging an application, and if the debugged code is changed (in the code base) as soon as the issue is found.",
    "crumbs": [
      "Home",
      "De.KCD - Data Management Platform on the Cloud, step by step"
    ]
  },
  {
    "objectID": "index.html#advantages",
    "href": "index.html#advantages",
    "title": "De.KCD - Data Management Platform on the Cloud, step by step",
    "section": "Advantages",
    "text": "Advantages",
    "crumbs": [
      "Home",
      "De.KCD - Data Management Platform on the Cloud, step by step"
    ]
  },
  {
    "objectID": "index.html#things-to-take-into-account",
    "href": "index.html#things-to-take-into-account",
    "title": "De.KCD - Data Management Platform on the Cloud, step by step",
    "section": "Things to take into account",
    "text": "Things to take into account\nAdding parameters\nThe different types of volumes",
    "crumbs": [
      "Home",
      "De.KCD - Data Management Platform on the Cloud, step by step"
    ]
  },
  {
    "objectID": "index.html#namespaces-and-namespaces-collisions",
    "href": "index.html#namespaces-and-namespaces-collisions",
    "title": "De.KCD - Data Management Platform on the Cloud, step by step",
    "section": "Namespaces and namespaces collisions",
    "text": "Namespaces and namespaces collisions\nNamespacing is by using the name of the containing folder of the docker-compose file. Using the same name, even in different parent folder, will use the same namespace.",
    "crumbs": [
      "Home",
      "De.KCD - Data Management Platform on the Cloud, step by step"
    ]
  },
  {
    "objectID": "to_investigate.html",
    "href": "to_investigate.html",
    "title": "Scrap page: things to investigate",
    "section": "",
    "text": "All in K8 is RESTful with an unique HTTP path\nStorage: persistent volume shouldn’t be on local storage! (can be still…)\nHealth check: several kind of health check are possible, liveness and readiness\nEndpoint: service without cluster IP (like external service (p.83 and following))\nAAA\nRemote storage vs local: security benefits, cost issue\nSession handling with replicaset: load balancing or microservices and/or RESTful and/or with DB\nCloud DB: managed (AWS), specialised (PostGres k8s), “regular”, key-value\nFree K8s training:",
    "crumbs": [
      "Home",
      "Scrap pages",
      "Scrap page: things to investigate"
    ]
  },
  {
    "objectID": "to_investigate.html#structure",
    "href": "to_investigate.html#structure",
    "title": "Scrap page: things to investigate",
    "section": "Structure",
    "text": "Structure\n\nGeneral overview\nBare metal vs VM vs container vs orchestrated container\n\n\nWhy container are better adapted for cloud application\n\n\nSecurity concern, a short overview\nVM isolation vs containerization -&gt; introduction to cgroups\nImages can be compromised: VM can be created from a Linux distribution\nOnce created, VM by themselves can be more at risk (images are immutables)\n\n\nCreating an image\n\n\nShort introduction to CD/CI\n\n\nDocker and docker-compose\n\n\nK8s\nWith sample: Seek (1st) from current docker image/compose to simple pod to full deployment to helm/kustomize\nLink to section\nStorage on the cloud: scalability, issue of desynchronization, where to push the data.\nPod - Replica Sets - Deployments- DaemonSets\nDecoupled applications can gain a lot, strongly coupled might not gain anything. Same for DB&lt;-&gt;Application.\nVolumes and why they are often not a good solution (aside for DB operators)\n\nDifferent cases\nWe consider an application that need several containers: at minima one application and one database. Our example will evolve to cover a full data management application, with object storage, jobs, reverse-proxy.\n1 pod with all\nIt is possible to set-up the containers to run in one pod, i.e. not decouple anything. It is the closest configuration to a docker compose installation and the one that will offer no benefit - only added complexity - over docker compose. Thus it should only be used as a starting point to learn Kubernetes, and basically is the use case we need to break down.\n1 node with all\nWhile 1 pod with all applications is rarely desirable, 1 node with all applications is the standard situation if you use Kubernetes on one machine only (so the node). It is also suitable for application that do not need to scale, do not store a lot of data, do not expect a lot of trafic, do not need to have redundancy. So a light web-application or a simple service will often need only one node.\n1 node with 1 external DB\n1..* nodes with simple load balancing, 1 external DB\n1..* nodes with simple load balancing, 1 DB on 1st Node\n1..* nodes with simple load balancing -&gt; Daemon set for action on all nodes\n1..* nodes with simple load balancing -&gt; Object storage -&gt; local HD on 1st Node, S3 instance\n1..* nodes with load balancing, Redis\n1..* nodes with load balancing -&gt; DB managed by operator\n1..* nodes with load balancing\n– Then introduce an assembly\n\n\nVocabulary\n\n\nHow to debug & Troubleshooting\nIf possible a section with step by step troubleshooting instructions\nkubectl exec –stdin –tty bare-seek-7dc954955d-h2xd8 – /bin/bash\ninside container: more/vi/vim/ps -edf/check user/links/logs\nRemove a deployment:\nkubectl get deployments –all-namespaces\nkubectl delete -n NAMESPACE deployment DEPLOYMENT_NAME\nNot enough ressources allocated: one of the application process can be killed by the Linux watchdog (Out Of Memory (OOM) killer). In our case the main executable:\n[1]+ Killed bundle exec puma -C docker/puma.rb\nDo the simplest setup-&gt; from a docker command line use docker to docker-compose. If possible it is better than to try from a complex docker compose. Then kompose.\nUsing kompose probably a good idea to remove env variable then extract them later (to check more)",
    "crumbs": [
      "Home",
      "Scrap pages",
      "Scrap page: things to investigate"
    ]
  },
  {
    "objectID": "pages/Costs_Limits_Troubleshooting.html",
    "href": "pages/Costs_Limits_Troubleshooting.html",
    "title": "Kubernetes - costs, limits and troubleshooting",
    "section": "",
    "text": "1 The cost of Kubernetes\nHigh complexity of some setup with less clarity than normal installation (complex Helm chart or operator).\n\n\n2 When an image does not work\nOne common issue with Docker and Kubernetes, or any other technologies using containers, is that the used images must work. Generally, with popular and well-maintained tools it isn’t an issue, but there could still be popular tools where the containerisation is an after-thought, and not always up-to-date, or older tools or less popular without an image or with an obsolete image. Or it could be a specific issue that makes this image breaks on your set-up.\nIn these cases, fixing the issue might be a high-cost operation, and a bare-metal or virtual-machine installation might help figure out the problem and fix it, or at the very last choice, be used instead."
  },
  {
    "objectID": "pages/Backups_and_security.html",
    "href": "pages/Backups_and_security.html",
    "title": "Backups and Security",
    "section": "",
    "text": "One generally important aspect of Data Management and data usage is to know which data to store and how to store it.\n\n\nIn many countries storage of personal information is strictly regulated. In the EU, storage of personal data can be done only with consent, must be accessible by the user, can be deleted upon request and can be stored only for a limited time.\nTODO: Add links\nWhen some research data is linked to person, it is advised to pseudonymize or to anonymize the data.\n\n\n\n\n\n\nImportant\n\n\n\nThe limitation of data storage for personal information includes backups",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Backups and Security"
    ]
  },
  {
    "objectID": "pages/Backups_and_security.html#personal-data",
    "href": "pages/Backups_and_security.html#personal-data",
    "title": "Backups and Security",
    "section": "",
    "text": "In many countries storage of personal information is strictly regulated. In the EU, storage of personal data can be done only with consent, must be accessible by the user, can be deleted upon request and can be stored only for a limited time.\nTODO: Add links\nWhen some research data is linked to person, it is advised to pseudonymize or to anonymize the data.\n\n\n\n\n\n\nImportant\n\n\n\nThe limitation of data storage for personal information includes backups",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Backups and Security"
    ]
  },
  {
    "objectID": "pages/Backups_and_security.html#defence-need-to-be-always-a-success-attack-need-only-one",
    "href": "pages/Backups_and_security.html#defence-need-to-be-always-a-success-attack-need-only-one",
    "title": "Backups and Security",
    "section": "Defence need to be always a success, attack need only one",
    "text": "Defence need to be always a success, attack need only one\nOne very important rule of security is that the attacker needs only one success. So it does not matter if many attempts are unsuccessful. They only need to try again. Thus defenders must adapt and monitor. It should be avoiding known vulnerabilies while trying to care for unknown ones.",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Backups and Security"
    ]
  },
  {
    "objectID": "pages/Backups_and_security.html#general-dispositions",
    "href": "pages/Backups_and_security.html#general-dispositions",
    "title": "Backups and Security",
    "section": "General dispositions",
    "text": "General dispositions\nDefault user not root (or super user if Windows)\nCareful with the paths and their access rights\nSymbolic links\nDatabase user, schema protections\ndifficult configurations and their possible issues (such as .htaccess or apache configuration in general)\n???",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Backups and Security"
    ]
  },
  {
    "objectID": "pages/Backups_and_security.html#firewall",
    "href": "pages/Backups_and_security.html#firewall",
    "title": "Backups and Security",
    "section": "Firewall",
    "text": "Firewall",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Backups and Security"
    ]
  },
  {
    "objectID": "pages/Backups_and_security.html#protections-against-attacks",
    "href": "pages/Backups_and_security.html#protections-against-attacks",
    "title": "Backups and Security",
    "section": "Protections against attacks",
    "text": "Protections against attacks",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Backups and Security"
    ]
  },
  {
    "objectID": "pages/Backups_and_security.html#passwords-and-keys",
    "href": "pages/Backups_and_security.html#passwords-and-keys",
    "title": "Backups and Security",
    "section": "Passwords and keys",
    "text": "Passwords and keys",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Backups and Security"
    ]
  },
  {
    "objectID": "pages/Backups_and_security.html#what-to-never-log-log-levels",
    "href": "pages/Backups_and_security.html#what-to-never-log-log-levels",
    "title": "Backups and Security",
    "section": "What to never log, log levels",
    "text": "What to never log, log levels\nLog are incredibly useful and should be used for debugging purpose and for security (they are often the only way to detect a tentative of intrusion/code injection).\nFor instance, it could be important to log all suspicious url paths are it might be a tentative of code injection, i.e. the attacker hoping that a mechanism in the code will execute a payload. A simple example would be executing raw SQL queries: * The URL subpath is /users/[name] where [name] is the name you want to look for. * The code will then simply execute “SELECT * FROM users WHERE name=[name];” * The attacker will use the URL subpath “/users/name”;DROP%20TABLE%20admin;%20 –“. * The code will execute”SELECT * FROM users WHERE name=“name”;DROP TABLE admin; –““. The end”–” is to comment the closing quote so it does not raise an error. * If the access right of the database is too permissible and an admin table exists, it will be dropped (but the example code is for illustration only, it might not work and in all cases it should not work).\nThis is a really well known and simple example and no modern web framework or API should allow such attacks nowadays. But the actual issue is with unknow vulnerability. Going back to this example, the web application should log something like:\n“2025-11-23_2:32:22 - Warning - incorrect characters in path:”/users/name”;DROP%20TABLE%20admin;%20 –”\nAnd that would allow to check what was attempted.\nBut logs are also plain text and, if accessed by an attacker, will be easy to comprehend. As such, there are information that should never been logged, and some that should be carefully logged:\n\nusername, password, keys, important DB table names (such as a users table used for login), should ideally never be written in a log file, even on DEBUG level and even on test. The reason for that is that everything that happen on test can happen on production. Amid a quick fix during an emergency, a test log entry can be forgiven and go to production. A fix on sensitive information can use the logs, but should be done in a very controlled way, without hurry, even during an emergency. A good way to proceed is to allow the log info only when needed, then switch it off (ideally remove the log entries) immediately after.",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Backups and Security"
    ]
  },
  {
    "objectID": "pages/Backups_and_security.html#what-to-never-store-or-never-in-reversible-format",
    "href": "pages/Backups_and_security.html#what-to-never-store-or-never-in-reversible-format",
    "title": "Backups and Security",
    "section": "What to never store (or never in “reversible” format)",
    "text": "What to never store (or never in “reversible” format)",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Backups and Security"
    ]
  },
  {
    "objectID": "pages/Backups_and_security.html#know-your-infrastructure",
    "href": "pages/Backups_and_security.html#know-your-infrastructure",
    "title": "Backups and Security",
    "section": "Know your infrastructure",
    "text": "Know your infrastructure",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Backups and Security"
    ]
  },
  {
    "objectID": "pages/Backups_and_security.html#deleting-data",
    "href": "pages/Backups_and_security.html#deleting-data",
    "title": "Backups and Security",
    "section": "Deleting data",
    "text": "Deleting data",
    "crumbs": [
      "Home",
      "Kubernetes",
      "Backups and Security"
    ]
  },
  {
    "objectID": "pages/DM_planning.html",
    "href": "pages/DM_planning.html",
    "title": "DataManagement - Planning",
    "section": "",
    "text": "A great introduction for Data Management can be found here",
    "crumbs": [
      "Home",
      "Data Management Principles",
      "DataManagement - Planning"
    ]
  }
]